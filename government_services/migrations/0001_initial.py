# Generated by Django 4.2.16 on 2025-08-02 13:16

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GovernmentService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Service Name')),
                ('description', models.TextField(verbose_name='Description')),
                ('official_website', models.URLField(blank=True, verbose_name='Official Website')),
                ('service_url', models.URLField(blank=True, verbose_name='Service URL')),
                ('phone_number', models.CharField(blank=True, max_length=20, verbose_name='Phone Number')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('difficulty', models.CharField(choices=[('easy', 'Easy'), ('medium', 'Medium'), ('hard', 'Hard')], default='medium', max_length=10, verbose_name='Difficulty Level')),
                ('estimated_time', models.CharField(blank=True, help_text='e.g., 15-30 minutes', max_length=50, verbose_name='Estimated Time')),
                ('required_documents', models.TextField(blank=True, verbose_name='Required Documents')),
                ('fees', models.TextField(blank=True, verbose_name='Fees')),
                ('status', models.CharField(choices=[('active', 'Active'), ('maintenance', 'Under Maintenance'), ('inactive', 'Inactive')], default='active', max_length=15, verbose_name='Status')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Featured Service')),
                ('is_popular', models.BooleanField(default=False, verbose_name='Popular Service')),
                ('sort_order', models.PositiveIntegerField(default=0, verbose_name='Sort Order')),
                ('view_count', models.PositiveIntegerField(default=0, verbose_name='View Count')),
                ('success_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, verbose_name='Success Rate (%)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
            options={
                'verbose_name': 'Government Service',
                'verbose_name_plural': 'Government Services',
                'ordering': ['sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ServiceCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Category Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('icon', models.CharField(default='fas fa-building', max_length=50, verbose_name='Icon Class')),
                ('color', models.CharField(default='primary', max_length=20, verbose_name='Color Class')),
                ('sort_order', models.PositiveIntegerField(default=0, verbose_name='Sort Order')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
            ],
            options={
                'verbose_name': 'Service Category',
                'verbose_name_plural': 'Service Categories',
                'ordering': ['sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ServiceRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Request Title')),
                ('description', models.TextField(verbose_name='Description')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=15, verbose_name='Status')),
                ('contact_phone', models.CharField(blank=True, max_length=20, verbose_name='Contact Phone')),
                ('contact_email', models.EmailField(blank=True, max_length=254, verbose_name='Contact Email')),
                ('documents', models.FileField(blank=True, null=True, upload_to='service_requests/', verbose_name='Documents')),
                ('additional_files', models.FileField(blank=True, null=True, upload_to='service_requests/', verbose_name='Additional Files')),
                ('admin_notes', models.TextField(blank=True, verbose_name='Admin Notes')),
                ('admin_response', models.TextField(blank=True, verbose_name='Admin Response')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Completed At')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requests', to='government_services.governmentservice')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Service Request',
                'verbose_name_plural': 'Service Requests',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ServiceNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('message', models.TextField(verbose_name='Message')),
                ('notification_type', models.CharField(choices=[('maintenance', 'Maintenance'), ('update', 'Update'), ('announcement', 'Announcement'), ('reminder', 'Reminder')], max_length=15, verbose_name='Type')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('start_date', models.DateTimeField(verbose_name='Start Date')),
                ('end_date', models.DateTimeField(blank=True, null=True, verbose_name='End Date')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='government_services.governmentservice')),
            ],
            options={
                'verbose_name': 'Service Notification',
                'verbose_name_plural': 'Service Notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ServiceFAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=500, verbose_name='Question')),
                ('answer', models.TextField(verbose_name='Answer')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('sort_order', models.PositiveIntegerField(default=0, verbose_name='Sort Order')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='faqs', to='government_services.governmentservice')),
            ],
            options={
                'verbose_name': 'Service FAQ',
                'verbose_name_plural': 'Service FAQs',
                'ordering': ['service', 'sort_order'],
            },
        ),
        migrations.AddField(
            model_name='governmentservice',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='government_services.servicecategory'),
        ),
        migrations.CreateModel(
            name='ServiceReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(choices=[(1, '1 Star'), (2, '2 Stars'), (3, '3 Stars'), (4, '4 Stars'), (5, '5 Stars')], verbose_name='Rating')),
                ('comment', models.TextField(blank=True, verbose_name='Comment')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Verified')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='government_services.governmentservice')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_reviews', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Service Review',
                'verbose_name_plural': 'Service Reviews',
                'ordering': ['-created_at'],
                'unique_together': {('service', 'user')},
            },
        ),
        migrations.CreateModel(
            name='ServiceGuide',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Guide Title')),
                ('content', models.TextField(verbose_name='Guide Content')),
                ('step_number', models.PositiveIntegerField(verbose_name='Step Number')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='guides', to='government_services.governmentservice')),
            ],
            options={
                'verbose_name': 'Service Guide',
                'verbose_name_plural': 'Service Guides',
                'ordering': ['service', 'step_number'],
                'unique_together': {('service', 'step_number')},
            },
        ),
    ]
